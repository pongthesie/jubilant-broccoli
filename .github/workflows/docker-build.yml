name: Build and Remote Load

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  build-and-transfer:
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: ocr-app
      IMAGE_TAG: test
      TAR_NAME: ocr-app-test.tar
      TAR_GZ: ocr-app-test.tar.gz
      REMOTE_PATH: /tmp/deploy

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build image (local only, load into Docker engine)
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: false
          load: true
          tags: ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}

      - name: Show local images (debug)
        run: docker images | head -n 20

      - name: Save as tar and compress
        run: |
          docker save $IMAGE_NAME:$IMAGE_TAG -o $TAR_NAME
          gzip -f $TAR_NAME
          ls -lh $TAR_GZ

      - name: Create checksum
        run: sha256sum ${{ env.TAR_GZ }} | tee ${{ env.TAR_GZ }}.sha256

      - name: List files before upload (debug)
        run: |
          pwd
          ls -lah
          ls -lh ${{ env.TAR_GZ }} ${{ env.TAR_GZ }}.sha256

      # สร้างโฟลเดอร์ปลายทางก่อน (กันกรณีไม่มี)
      - name: Ensure remote path exists
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.TARGET_HOST }}
          username: ${{ secrets.TARGET_USER }}
          port: ${{ secrets.TARGET_PORT }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: mkdir -p ${{ env.REMOTE_PATH }}

      - name: Copy files to remote (scp)
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.TARGET_HOST }}
          username: ${{ secrets.TARGET_USER }}
          port: ${{ secrets.TARGET_PORT }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          # ✅ ใช้ path แบบ relative จาก /github/workspace
          source: |
            ${{ env.TAR_GZ }}
            ${{ env.TAR_GZ }}.sha256
          target: ${{ env.REMOTE_PATH }}
          # (ตัวเลือก) เปิดโหมด debug เพิ่มเติม
          # debug: true

      - name: Load into Docker on remote (ssh)
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.TARGET_HOST }}
          username: ${{ secrets.TARGET_USER }}
          port: ${{ secrets.TARGET_PORT }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            set -euo pipefail
            cd ${{ env.REMOTE_PATH }}
            echo "Remote files:" && ls -lh
            test -s ${{ env.TAR_GZ }} && test -s ${{ env.TAR_GZ }}.sha256
            sha256sum -c ${{ env.TAR_GZ }}.sha256
            gunzip -f ${{ env.TAR_GZ }}
            docker load -i ${{ env.TAR_NAME }}
            docker images | grep ${{ env.IMAGE_NAME }} || true
